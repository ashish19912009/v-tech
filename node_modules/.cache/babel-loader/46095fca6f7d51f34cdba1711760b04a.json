{"ast":null,"code":"import _defineProperty from \"/Users/ashishkumarrena/Downloads/vsidik-tech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ashishkumarrena/Downloads/vsidik-tech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ashishkumarrena/Downloads/vsidik-tech/src/views/AdminEditContactUs/EditContactUs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport AdminNavbar from \"../../components/NavbarAdmin/NavbarAdmin\";\nimport { Col, Row, Form, FormGroup, Input, Button } from 'reactstrap';\nimport DarkFooter from \"../../components/Footers/DarkFooter\";\nimport Section from '../../components/Section/Section';\nimport AddressCard from '../../components/Cards/AddressCard';\nimport axInstance from '../../connection/axiosConn';\nimport axios from 'axios';\n\nconst EditContactUs = () => {\n  const _useState = useState([{\n    address1: '',\n    address2: '',\n    city: '',\n    state: '',\n    contact_1: 0,\n    contact_2: 0,\n    email: '',\n    pincode: 0,\n    wrk_hrs: ''\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        completeAddress = _useState2[0],\n        setUpdateAddress = _useState2[1];\n\n  useEffect(() => {\n    const showData = _objectSpread({}, completeAddress);\n\n    axios.get(\"\".concat(axInstance, \"/getAddress/\")).then(res => {\n      if (res.status === 200) {\n        const newData = res.data.map(el => {\n          delete el._id;\n          delete el.createdAt;\n          delete el.updatedAt;\n          return el;\n        });\n        showData[0].address1 = newData[0].address1;\n        showData[0].address2 = newData[0].address2;\n        showData[0].city = newData[0].city;\n        showData[0].state = newData[0].state;\n        showData[0].contact_1 = newData[0].mobile_1;\n        showData[0].contact_2 = newData[0].mobile_2;\n        showData[0].pincode = newData[0].pincode;\n        showData[0].email = newData[0].email;\n        showData[0].wrk_hrs = newData[0].working_hrs;\n        setUpdateAddress(showData);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [completeAddress]);\n\n  const onContactFormSubmit = e => {\n    e.preventDefault();\n\n    const newAddress = _objectSpread({}, completeAddress);\n\n    newAddress[0].address1 = document.getElementById('add1').value;\n    newAddress[0].address2 = document.getElementById('add2').value;\n    newAddress[0].city = document.getElementById('city').value;\n    newAddress[0].state = document.getElementById('state').value;\n    newAddress[0].contact_1 = document.getElementById('mob_1').value;\n    newAddress[0].contact_2 = document.getElementById('mob_2').value;\n    newAddress[0].email = document.getElementById('email').value;\n    newAddress[0].pincode = document.getElementById('pincode').value;\n    newAddress[0].wrk_hrs = document.getElementById('wrk_hrs').value;\n    axios.post(\"\".concat(axInstance, \"/updateAddress/\"), newAddress[0]).then(res => {\n      if (res.status === 200) {\n        setUpdateAddress(newAddress);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(AdminNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(AddressCard, {\n    address_1: completeAddress[0].address1,\n    address_2: completeAddress[0].address2,\n    city: completeAddress[0].city,\n    state: completeAddress[0].state,\n    pincode: completeAddress[0].pincode,\n    primary_mob: completeAddress[0].contact_1,\n    secondary_mob: completeAddress[0].contact_2,\n    email: completeAddress[0].email,\n    wrk_hrs: completeAddress[0].wrk_hrs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    sm: 7,\n    style: {\n      paddingLeft: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Update Address\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: onContactFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"add1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Address Line 1 *\"), React.createElement(Input, {\n    id: \"add1\",\n    placeholder: \"Address\",\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"add2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Address Line 2 *\"), React.createElement(Input, {\n    id: \"add2\",\n    placeholder: \"Address\",\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"City *\"), React.createElement(Input, {\n    id: \"city\",\n    placeholder: \"City\",\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"state\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"State *\"), React.createElement(Input, {\n    id: \"state\",\n    placeholder: \"State\",\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"mob_1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Contact No (Primary) *\"), React.createElement(Input, {\n    id: \"mob_1\",\n    placeholder: \"Mobile\",\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"mob_2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Contact No (Alt) *\"), React.createElement(Input, {\n    id: \"mob_2\",\n    placeholder: \"Mobile\",\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"mob_1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Email ID*\"), React.createElement(Input, {\n    id: \"email\",\n    placeholder: \"Email\",\n    type: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"pincode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Pincode *\"), React.createElement(Input, {\n    id: \"pincode\",\n    placeholder: \"Pin Code\",\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"wrk_hrs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Working Hours *\"), React.createElement(Input, {\n    id: \"wrk_hrs\",\n    placeholder: \"Working Hours\",\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Update\")))))))), React.createElement(DarkFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })));\n};\n\nexport default EditContactUs;","map":{"version":3,"sources":["/Users/ashishkumarrena/Downloads/vsidik-tech/src/views/AdminEditContactUs/EditContactUs.js"],"names":["React","useState","useEffect","AdminNavbar","Col","Row","Form","FormGroup","Input","Button","DarkFooter","Section","AddressCard","axInstance","axios","EditContactUs","address1","address2","city","state","contact_1","contact_2","email","pincode","wrk_hrs","completeAddress","setUpdateAddress","showData","get","then","res","status","newData","data","map","el","_id","createdAt","updatedAt","mobile_1","mobile_2","working_hrs","catch","err","console","log","onContactFormSubmit","e","preventDefault","newAddress","document","getElementById","value","post","paddingLeft"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport AdminNavbar from \"../../components/NavbarAdmin/NavbarAdmin\";\nimport {Col, Row, Form, FormGroup, Input, Button} from 'reactstrap';\nimport DarkFooter from \"../../components/Footers/DarkFooter\";\nimport Section from '../../components/Section/Section';\nimport AddressCard from '../../components/Cards/AddressCard';\nimport axInstance from '../../connection/axiosConn';\nimport axios from 'axios';\n\nconst EditContactUs = () => {\n\n\n  const [completeAddress, setUpdateAddress] = useState([\n    {\n      address1: '',\n      address2: '',\n      city: '',\n      state: '',\n      contact_1: 0,\n      contact_2: 0,\n      email: '',\n      pincode: 0,\n      wrk_hrs: ''\n    }\n  ]);\n\n  useEffect(() => {\n    const showData = {...completeAddress};\n    axios.get(`${axInstance}/getAddress/`)\n     .then(res => {\n       if(res.status === 200)\n       {\n        const newData = res.data.map((el)=>{\n            delete el._id; delete el.createdAt; delete el.updatedAt;\n            return el; \n          });\n        \n        showData[0].address1 = newData[0].address1;\n        showData[0].address2 = newData[0].address2;\n        showData[0].city = newData[0].city;\n        showData[0].state = newData[0].state;\n        showData[0].contact_1 = newData[0].mobile_1;\n        showData[0].contact_2 = newData[0].mobile_2;\n        showData[0].pincode = newData[0].pincode;\n        showData[0].email = newData[0].email;\n        showData[0].wrk_hrs = newData[0].working_hrs;\n        setUpdateAddress(showData);\n       }\n     })\n     .catch(err => {\n       console.log(err);\n     });  \n  },[completeAddress]);\n\n\nconst  onContactFormSubmit = (e) => {\n    e.preventDefault();\n    const newAddress = {...completeAddress};\n\n    newAddress[0].address1 = document.getElementById('add1').value;\n    newAddress[0].address2 = document.getElementById('add2').value;\n    newAddress[0].city = document.getElementById('city').value;\n    newAddress[0].state = document.getElementById('state').value;\n    newAddress[0].contact_1 = document.getElementById('mob_1').value;\n    newAddress[0].contact_2 = document.getElementById('mob_2').value;\n    newAddress[0].email = document.getElementById('email').value;\n    newAddress[0].pincode = document.getElementById('pincode').value;\n    newAddress[0].wrk_hrs = document.getElementById('wrk_hrs').value;\n\n     axios.post(`${axInstance}/updateAddress/`,newAddress[0])\n     .then(res => {\n       if(res.status === 200)\n       {\n         setUpdateAddress(newAddress);\n       }\n     })\n     .catch(err => {\n       console.log(err);\n     });\n\n  }\n\n\n    return(\n        <>\n            <AdminNavbar/>\n            <div className=\"wrapper\">\n                <div className=\"main\">\n                    <Section>\n                      <br/>\n                      <br/>\n                      <Col>\n                        <Row>\n                            <Col xs={12} sm={5}>\n                              <AddressCard address_1={completeAddress[0].address1} address_2={completeAddress[0].address2} city={completeAddress[0].city} state={completeAddress[0].state} pincode={completeAddress[0].pincode} primary_mob={completeAddress[0].contact_1} secondary_mob={completeAddress[0].contact_2} email={completeAddress[0].email} wrk_hrs={completeAddress[0].wrk_hrs}/>\n                            </Col>\n                            <Col xs={12} sm={7} style={{paddingLeft:'20px'}}>\n                              <Row>\n                              <h3 className='subtitle'>Update Address</h3>\n                              </Row>\n                              <Row>\n                                <Form onSubmit={onContactFormSubmit}>\n                                    <div className=\"form-row\">\n                                      <FormGroup className=\"col-md-6\">\n                                        <label htmlFor=\"add1\">Address Line 1 *</label>\n                                        <Input id=\"add1\" placeholder=\"Address\" type=\"text\" required></Input>\n                                      </FormGroup>\n                                      <FormGroup className=\"col-md-6\">\n                                      <label htmlFor=\"add2\">Address Line 2 *</label>\n                                        <Input id=\"add2\" placeholder=\"Address\" type=\"text\" required></Input>\n                                      </FormGroup>\n                                    </div>\n                                    <div className=\"form-row\">\n                                      <FormGroup className=\"col-md-6\">\n                                        <label htmlFor=\"city\">City *</label>\n                                        <Input id=\"city\" placeholder=\"City\" type=\"text\" required></Input>\n                                      </FormGroup>\n                                      <FormGroup className=\"col-md-6\">\n                                      <label htmlFor=\"state\">State *</label>\n                                        <Input id=\"state\" placeholder=\"State\" type=\"text\" required></Input>\n                                      </FormGroup>\n                                    </div>\n                                    <div className=\"form-row\">\n                                      <FormGroup className=\"col-md-6\">\n                                        <label htmlFor=\"mob_1\">Contact No (Primary) *</label>\n                                        <Input id=\"mob_1\" placeholder=\"Mobile\" type=\"number\" required></Input>\n                                      </FormGroup>\n                                      <FormGroup className=\"col-md-6\">\n                                      <label htmlFor=\"mob_2\">Contact No (Alt) *</label>\n                                        <Input id=\"mob_2\" placeholder=\"Mobile\" type=\"number\" required></Input>\n                                      </FormGroup>\n                                    </div>\n                                    <div className=\"form-row\">\n                                      <FormGroup className=\"col-md-6\">\n                                        <label htmlFor=\"mob_1\">Email ID*</label>\n                                        <Input id=\"email\" placeholder=\"Email\" type=\"email\" required></Input>\n                                      </FormGroup>\n                                    </div>\n                                    <div className=\"form-row\">\n                                      <FormGroup className=\"col-md-6\">\n                                        <label htmlFor=\"pincode\">Pincode *</label>\n                                        <Input id=\"pincode\" placeholder=\"Pin Code\" type=\"number\" required></Input>\n                                      </FormGroup>\n                                      <FormGroup className=\"col-md-6\">\n                                        <label htmlFor=\"wrk_hrs\">Working Hours *</label>\n                                        <Input id=\"wrk_hrs\" placeholder=\"Working Hours\" type=\"text\" required></Input>\n                                      </FormGroup>\n                                    </div> \n                                    <Button color=\"primary\" type=\"submit\">\n                                      Update\n                                    </Button>\n                                </Form>\n                              </Row>\n                            </Col>\n                               \n                        </Row>\n                      </Col>  \n                    </Section>\n                </div>\n              <DarkFooter/>\n            </div>\n        </>\n    );\n};\nexport default EditContactUs;"]},"metadata":{},"sourceType":"module"}