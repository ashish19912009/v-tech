{"ast":null,"code":"import _defineProperty from \"/Users/ashishkumarrena/Downloads/vsidik-tech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ashishkumarrena/Downloads/vsidik-tech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ashishkumarrena/Downloads/vsidik-tech/src/components/ContactBody/ContactBody.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Section from '../Section/Section';\nimport ContactUsForm from '../ContactUsForm/ContactUsForm';\nimport { Row, Col } from 'reactstrap';\nimport AddressCard from '../../components/Cards/AddressCard';\nimport axios from 'axios';\nimport axInstance from '../../connection/axiosConn';\n\nconst ContactBody = () => {\n  const _useState = useState([{\n    address1: '658/14',\n    address2: 'LANE 13, VIJAY PARK EXTENSION',\n    city: 'DEHRADUN',\n    state: 'UTTRAKHAND',\n    contact_1: 7088669991,\n    contact_2: 8971489349,\n    email: 'reachus@vaidiktechnologies.com',\n    pincode: 248001,\n    wrk_hrs: '9:00 AM - 6:00PM'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        completeAddress = _useState2[0],\n        setUpdateAddress = _useState2[1];\n\n  useEffect(() => {\n    const showData = _objectSpread({}, completeAddress);\n\n    axios.get(\"\".concat(axInstance, \"/getAddress/\")).then(res => {\n      if (res.status === 200) {\n        const newData = res.data.map(el => {\n          delete el._id;\n          delete el.createdAt;\n          delete el.updatedAt;\n          return el;\n        });\n        showData[0].address1 = newData[0].address1;\n        showData[0].address2 = newData[0].address2;\n        showData[0].city = newData[0].city;\n        showData[0].state = newData[0].state;\n        showData[0].contact_1 = newData[0].mobile_1;\n        showData[0].contact_2 = newData[0].mobile_2;\n        showData[0].pincode = newData[0].pincode;\n        showData[0].email = newData[0].email;\n        showData[0].wrk_hrs = newData[0].working_hrs;\n        setUpdateAddress(showData);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Section, {\n    bgColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Contact Us\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 8,\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ContactUsForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    sm: 4,\n    style: {\n      color: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(AddressCard, {\n    address_1: completeAddress[0].address1,\n    address_2: completeAddress[0].address2,\n    city: completeAddress[0].city,\n    state: completeAddress[0].state,\n    pincode: completeAddress[0].pincode,\n    primary_mob: completeAddress[0].contact_1,\n    secondary_mob: completeAddress[0].contact_2,\n    email: completeAddress[0].email,\n    wrk_hrs: completeAddress[0].wrk_hrs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))));\n};\n\nexport default ContactBody;","map":{"version":3,"sources":["/Users/ashishkumarrena/Downloads/vsidik-tech/src/components/ContactBody/ContactBody.js"],"names":["React","useState","useEffect","Section","ContactUsForm","Row","Col","AddressCard","axios","axInstance","ContactBody","address1","address2","city","state","contact_1","contact_2","email","pincode","wrk_hrs","completeAddress","setUpdateAddress","showData","get","then","res","status","newData","data","map","el","_id","createdAt","updatedAt","mobile_1","mobile_2","working_hrs","catch","err","console","log","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Section from '../Section/Section';\nimport ContactUsForm from '../ContactUsForm/ContactUsForm';\nimport {Row, Col} from 'reactstrap';\nimport AddressCard from '../../components/Cards/AddressCard';\nimport axios from 'axios';\nimport axInstance from '../../connection/axiosConn';\n\nconst ContactBody = () => {\n    const [completeAddress, setUpdateAddress] = useState([\n        {\n          address1: '658/14',\n          address2: 'LANE 13, VIJAY PARK EXTENSION',\n          city: 'DEHRADUN',\n          state: 'UTTRAKHAND',\n          contact_1: 7088669991,\n          contact_2: 8971489349,\n          email: 'reachus@vaidiktechnologies.com',\n          pincode: 248001,\n          wrk_hrs: '9:00 AM - 6:00PM'\n        }\n      ]);\n\n      useEffect(() => {\n        const showData = {...completeAddress};\n        axios.get(`${axInstance}/getAddress/`)\n         .then(res => {\n           if(res.status === 200)\n           {\n            const newData = res.data.map((el)=>{\n                delete el._id; delete el.createdAt; delete el.updatedAt;\n                return el; \n              });\n            \n            showData[0].address1 = newData[0].address1;\n            showData[0].address2 = newData[0].address2;\n            showData[0].city = newData[0].city;\n            showData[0].state = newData[0].state;\n            showData[0].contact_1 = newData[0].mobile_1;\n            showData[0].contact_2 = newData[0].mobile_2;\n            showData[0].pincode = newData[0].pincode;\n            showData[0].email = newData[0].email;\n            showData[0].wrk_hrs = newData[0].working_hrs;\n            setUpdateAddress(showData);\n           }\n         })\n         .catch(err => {\n           console.log(err);\n         });  \n      },[]);  \n  \n    return(\n        <>\n            <Section bgColor='transparent'>\n           <Col><h1 className='title'>Contact Us</h1></Col>\n            <Row>\n                <Col xs={12} sm={8} style={{color:'black'}}>\n                    <ContactUsForm/>\n                </Col>\n                <Col xs={12} sm={4} style={{color:'#000000'}}>\n                <AddressCard address_1={completeAddress[0].address1} address_2={completeAddress[0].address2} city={completeAddress[0].city} state={completeAddress[0].state} pincode={completeAddress[0].pincode} primary_mob={completeAddress[0].contact_1} secondary_mob={completeAddress[0].contact_2} email={completeAddress[0].email} wrk_hrs={completeAddress[0].wrk_hrs}/> \n                </Col>\n            </Row>\n        </Section>\n        </>\n    );\n}\n\nexport default ContactBody;"]},"metadata":{},"sourceType":"module"}